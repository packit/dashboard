/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectsIndexImport } from './routes/projects/index'
import { Route as ProjectsForgeNamespaceRepoImport } from './routes/projects/$forge.$namespace.$repo'

// Create Virtual Routes

const UsageLazyImport = createFileRoute('/usage')()

// Create/Update Routes

const UsageLazyRoute = UsageLazyImport.update({
  path: '/usage',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/usage.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsIndexRoute = ProjectsIndexImport.update({
  path: '/projects/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsForgeNamespaceRepoRoute = ProjectsForgeNamespaceRepoImport.update(
  {
    path: '/projects/$forge/$namespace/$repo',
    getParentRoute: () => rootRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/usage': {
      id: '/usage'
      path: '/usage'
      fullPath: '/usage'
      preLoaderRoute: typeof UsageLazyImport
      parentRoute: typeof rootRoute
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$forge/$namespace/$repo': {
      id: '/projects/$forge/$namespace/$repo'
      path: '/projects/$forge/$namespace/$repo'
      fullPath: '/projects/$forge/$namespace/$repo'
      preLoaderRoute: typeof ProjectsForgeNamespaceRepoImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  UsageLazyRoute,
  ProjectsIndexRoute,
  ProjectsForgeNamespaceRepoRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/usage",
        "/projects/",
        "/projects/$forge/$namespace/$repo"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/usage": {
      "filePath": "usage.lazy.tsx"
    },
    "/projects/": {
      "filePath": "projects/index.tsx"
    },
    "/projects/$forge/$namespace/$repo": {
      "filePath": "projects/$forge.$namespace.$repo.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
